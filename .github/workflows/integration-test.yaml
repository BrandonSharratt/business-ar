name: Integration Tests

#Reqiured variables
#TESTIM_TOKEN
#TESTIM_PROJECT
#TESTIM_USER
#OIDC_URL
#OIDC_CLIENT
#OIDC_CLIENT_SECRET
#GOOGLE_APPLICATION_CREDENTIALS
#FIREBASE_API_KEY
#FIREBASE_MESSAGING_SENDER_ID
#FIREBASE_APP_ID
#AUTH_API_URL
#PAY_API_URL


on:
  push:
    branches:
      - main

jobs:
  integration_tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4
      - name: terraform
        env:
          TERRAFORM_VERSION: "1.8.0"
        run: |
          export WD=`pwd`
          cd /tmp
          wget -q https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip
          unzip -o /tmp/terraform_${TERRAFORM_VERSION}_linux_amd64.zip
          rm -rf /tmp/terraform_${TERRAFORM_VERSION}_linux_amd64.zip
          chmod +x terraform
          alias terraform='/tmp/terraform'
          cd $WD/api
          docker build . -t regapi:latest
          cd $WD/web/site
          docker build . -t regweb:latest
          cd $WD/terraform
          mkdir _tmp
          chmod -R 777 _tmp
          
          echo "127.0.0.1 ar.example.demo" | sudo tee -a /etc/hosts
          echo "127.0.0.1 ar.example.demo" | sudo tee -a /etc/hosts
          terraform init
          mkdir _tmp

          #create terraform vars file
          echo "firebase_api_key=\"${{ secrets.FIREBASE_API_KEY }}\" > terraform.tfvars
          echo "firebase_messaging_sender_id=\"${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}\" >> terraform.tfvars
          echo "firebase_app_id=\"${{ secrets.FIREBASE_APP_ID }}\" >> terraform.tfvars

          echo "auth_api_url=\"${{ secrets.AUTH_API_URL }}\" >> terraform.tfvars
          echo "pay_api_url=\"${{ secrets.PAY_API_URL }}\" >> terraform.tfvars

          echo "oidc_issuer=\"${{ secrets.OIDC_URL }}\" >> terraform.tfvars
          echo "oidc_well_known_config=\"${{ secrets.OIDC_URL }}/.well-known/openid-configuration\" >> terraform.tfvars

          echo "auth_svc_url=\"${{ secrets.OIDC_URL }}/protocol/openid-connect/token\" >> terraform.tfvars
          echo "auth_client_id=\"${{ secrets.OIDC_CLIENT }}\" >> terraform.tfvars
          echo "auth_client_secret=\"${{ secrets.OIDC_CLIENT_SECRET }}\" >> terraform.tfvars
          #end terraform vars file

          #create project-firebase-admin-sdk.json
          printf ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }} > project-firebase-adminsdk.json
          #

          terraform apply -var hostRootPath=`pwd`/_tmp -auto-approve

      - name: testim install
        uses: coactions/setup-xvfb@v1
        with:
          run: npm i -g @testim/testim-cli
          working-directory: ./testim #optional

      - name: test
        uses: coactions/setup-xvfb@v1
        with:
          run: testim --token "${{ secrets.TESTIM_TOKEN }}" --project "${{ vars.TESTIM_PROJECT }}" --use-local-chrome-driver --user ${{ vars.TESTIM_USER }} --suite "Annual Report Integration" --base-url http://ar.example.demo:3000 --params-file ./config.json
          working-directory: ./testim #optional